<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddedKey_Successfully" xml:space="preserve">
    <value>指定されたキーはNULL値として追加されました。</value>
  </data>
  <data name="AddedSection_Successfully" xml:space="preserve">
    <value>指定されたキーは空のセクションとして追加されました。</value>
  </data>
  <data name="CannotDelete" xml:space="preserve">
    <value>指定されたキーは存在しないため削除する事はできません。</value>
  </data>
  <data name="CmdHelp" xml:space="preserve">
    <value>このコマンドラインツールで利用できるコマンドの一覧です。
(※大文字と小文字は全て区別されます。)</value>
  </data>
  <data name="CmdHelp_Add" xml:space="preserve">
    <value>新しいキーを現在のセクションに追加します。既に存在する場合はNULL値を代入します。</value>
  </data>
  <data name="CmdHelp_DelRmv" xml:space="preserve">
    <value>指定されたキーを削除します。</value>
  </data>
  <data name="CmdHelp_EndExitQuit" xml:space="preserve">
    <value>このコマンドラインツールを終了します。</value>
  </data>
  <data name="CmdHelp_Goroot" xml:space="preserve">
    <value>現在選択しているセクションをルートセクションに戻します。</value>
  </data>
  <data name="CmdHelp_Gset" xml:space="preserve">
    <value>指定されたキーの値を表示し、新しい値を設定します。新しい値が空白の場合は変更されません。</value>
  </data>
  <data name="CmdHelp_Help" xml:space="preserve">
    <value>このツールの説明書を表示します。</value>
  </data>
  <data name="CmdHelp_Into" xml:space="preserve">
    <value>指定されたセクションを選択します。</value>
  </data>
  <data name="CmdHelp_List" xml:space="preserve">
    <value>現在選択しているセクションの全ての値をコンソール画面に出力します。ただし、コメントは表示しません。</value>
  </data>
  <data name="CmdHelp_ListFull" xml:space="preserve">
    <value>現在選択しているセクションの全ての値をコンソール画面に出力します。また、コメントも表示します。</value>
  </data>
  <data name="CmdHelp_Mks" xml:space="preserve">
    <value>新しいセクションキーを現在のセクションに追加します。既に存在する場合は空のセクションを代入します。</value>
  </data>
  <data name="CmdHelp_Reload" xml:space="preserve">
    <value>現在の変更内容を全て破棄し、ファイルから設定情報を読み込みます。</value>
  </data>
  <data name="CmdHelp_Save" xml:space="preserve">
    <value>現在の変更内容をファイルに保存します。</value>
  </data>
  <data name="CmdHelp_SaveB" xml:space="preserve">
    <value>現在の変更内容をバイナリ形式としてファイルに保存します。</value>
  </data>
  <data name="CmdHelp_SaveT" xml:space="preserve">
    <value>現在の変更内容をテキスト形式としてファイルに保存します。</value>
  </data>
  <data name="CommandLine_Invalid" xml:space="preserve">
    <value>コマンドライン構文が間違っています。以下の様に呼び出してください。</value>
  </data>
  <data name="CommandNotFound" xml:space="preserve">
    <value>指定されたコマンド("{0}")は存在しないか現在は利用できません。</value>
  </data>
  <data name="Deleted_Successfully" xml:space="preserve">
    <value>指定されたキーは正常に削除されました。</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>指定されたファイル("{0}")は存在しません。</value>
  </data>
  <data name="KeyIsNotSection" xml:space="preserve">
    <value>指定されたキー("{0}")はセクションではありません。</value>
  </data>
  <data name="KeyNotFound" xml:space="preserve">
    <value>指定されたキー("{0}")は存在しません。</value>
  </data>
  <data name="KindOfKey" xml:space="preserve">
    <value>種類：</value>
  </data>
  <data name="NewValueOfKey" xml:space="preserve">
    <value>このキーの新しい値：</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>準備完了</value>
  </data>
  <data name="Reloaded_Successfully" xml:space="preserve">
    <value>設定ファイルから情報を正常に読み直しました。</value>
  </data>
  <data name="Saved_Successfully" xml:space="preserve">
    <value>設定ファイルは正常に保存されました。</value>
  </data>
  <data name="SectionList_Empty" xml:space="preserve">
    <value>空値です。</value>
  </data>
  <data name="SectionList_Present" xml:space="preserve">
    <value>{0}個の項目が存在しています。</value>
  </data>
  <data name="TempID" xml:space="preserve">
    <value>仮ID</value>
  </data>
</root>